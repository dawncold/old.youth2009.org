<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: file | dawncold's tech blog]]></title>
  <link href="http://www.youth2009.org/blog/categories/file/atom.xml" rel="self"/>
  <link href="http://www.youth2009.org/"/>
  <updated>2013-01-22T23:36:51+08:00</updated>
  <id>http://www.youth2009.org/</id>
  <author>
    <name><![CDATA[dawncold]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[python批量处理文件]]></title>
    <link href="http://www.youth2009.org/blog/2011/08/13/batch-handly-files-use-python/"/>
    <updated>2011-08-13T15:30:00+08:00</updated>
    <id>http://www.youth2009.org/blog/2011/08/13/batch-handly-files-use-python</id>
    <content type="html"><![CDATA[<pre><code>        &lt;p&gt;从某网站上下载了几个压缩包，里面全是目录，每个目录下都有一个doc文件，但可恶的是这些doc文件被换了扩展名，原本是xxx.doc现在变成xxx.doc.resx，我得用python批量处理一下：&lt;/p&gt;
</code></pre>

<br /><pre class="prettyprint linenums bush:python" lang="python">#! /usr/bin/python


<h1>-<em>- coding:utf-8 -</em>-</h1>

<h1>遍历所有目录，把resx文件扩展名删掉</h1>

<p>import os</p>

<p>current_path = os.getcwd()
allsubdir = os.listdir(current_path)</p>

<p>for subdir in allsubdir:</p>

<pre><code>subdir_path = './' + subdir
if os.path.isdir(subdir_path):
    files = os.listdir(subdir_path)
    for _file in files:
        basename = os.path.basename(_file)
        allname = os.path.splitext(basename)
        if '.resx' in allname:
            print 'resx file %s' % basename
            without_resx = allname[0]
            os.rename(subdir_path+'/'+_file,without_resx)
        else:
            print 'not resx file'
            continue&lt;/pre&gt;
</code></pre>

<br /><p>还用了一个删除空目录的脚本：</p>


<br /><pre class="prettyprint linenums bush:python" lang="python">#! /usr/bin/python


<h1>-<em>- coding:utf-8 -</em>-</h1>

<h1>删除空目录</h1>

<p>import os</p>

<p>alldir = os.listdir(os.getcwd())
for _dir in alldir:</p>

<pre><code>if os.path.isdir('./'+_dir):
    print 'dir: %s' % _dir
    if os.listdir('./'+_dir):
        print 'have something %s' % os.listdir('./'+_dir)
    else:
        os.rmdir('./'+_dir)
else:
    print 'file or others'&lt;/pre&gt;
</code></pre>

<br /><p>用python，很快乐！</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Lion吃了我的文件]]></title>
    <link href="http://www.youth2009.org/blog/2011/07/22/lion-eat-my-file-on-desktop/"/>
    <updated>2011-07-22T07:28:00+08:00</updated>
    <id>http://www.youth2009.org/blog/2011/07/22/lion-eat-my-file-on-desktop</id>
    <content type="html"><![CDATA[<pre><code>        &lt;p&gt;很奇怪的现象：我在桌面上放了一个文件，是用Bean生成的文本文件，接着从这个Desktop往下一个Desktop切换，但不完全切换，只需要看下一个Desktop内容的一点，然后再回到当前这个Desktop，就会发现桌面上的那个文件没了，但点击文件的位置仍然能够打开！！这应该是一个相当大的bug吧？难道还能是一个专门给用户着想的地方？！&lt;/p&gt;
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[简要写写python的file中的tell和seek]]></title>
    <link href="http://www.youth2009.org/blog/2011/07/09/seek-and-tell-in-python/"/>
    <updated>2011-07-09T15:12:00+08:00</updated>
    <id>http://www.youth2009.org/blog/2011/07/09/seek-and-tell-in-python</id>
    <content type="html"><![CDATA[<pre><code>        &lt;p&gt;对于一个&lt;a title="file" href="http://www.youth2009.org/tag/file/"&gt;file&lt;/a&gt;，调用&lt;a title="tell" href="http://www.youth2009.org/tag/tell/"&gt;tell&lt;/a&gt;能够知道现在的文件位置。&lt;a title="seek" href="http://www.youth2009.org/tag/seek/"&gt;seek&lt;/a&gt;是改变文件位置。  比如文件中有3行句子，readline后位置就到了第一行的最后，再readline就到了第二行的最后，readline后我调用了tell，看到的结果就是这样的。输出完&lt;a title="tell" href="http://www.youth2009.org/tag/tell/"&gt;tell&lt;/a&gt;我又使用了&lt;a title="seek" href="http://www.youth2009.org/tag/seek/"&gt;seek&lt;/a&gt;(0),这样文件位置就回到开头了，下次再调用readline就会输出原来第一行的内容了，这应该是很容易理解的。不明白可以亲自试试。&lt;/p&gt;
</code></pre>

<p></p>


<pre class="prettyprint linenums bush:python" lang="python">from sys import argv

script, input_file = argv

def print_all(f):
    print f.read()

def rewind(f):
    f.seek(0)

def print_a_line(line_count, f):
    print line_count, f.readline()

current_file = open(input_file)

print "First let's print the while file:\n"
print_all(current_file)

print "Now let's rewind, kind of like a tape."
rewind(current_file)

print "Let's print three lines:"

current_line = 1
print_a_line(current_line, current_file)
print "current_pos:%d" % current_file.tell()
rewind(current_file)

current_line += 1
print_a_line(current_line, current_file)
print "current_pos:%d" % current_file.tell()

current_line += 1
print_a_line(current_line, current_file)
print "current_pos:%d" % current_file.tell()
</pre>

]]></content>
  </entry>
  
</feed>

<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: 软件外包 | dawncold's tech blog]]></title>
  <link href="http://www.youth2009.org/blog/categories/ruan-jian-wai-bao/atom.xml" rel="self"/>
  <link href="http://www.youth2009.org/"/>
  <updated>2013-06-04T23:31:35+08:00</updated>
  <id>http://www.youth2009.org/</id>
  <author>
    <name><![CDATA[dawncold]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[对软件外包专业的感想]]></title>
    <link href="http://www.youth2009.org/blog/2011/05/24/thoughts-for-software-outsourcing/"/>
    <updated>2011-05-24T23:24:00+08:00</updated>
    <id>http://www.youth2009.org/blog/2011/05/24/thoughts-for-software-outsourcing</id>
    <content type="html"><![CDATA[<pre><code>        &lt;p&gt;我将从以下三个方面简要谈一下对“软件外包”专业的感想&lt;br /&gt;
</code></pre>

<p>    认识<br />
        我眼中的软件外包专业与其定义差不多──将非核心业务外包到劳动力相对本国较低的其他国家，从而达到降低劳动成本提高产品价值的目的。然而我想强调一下这个词──“非核心业务”，从这里就已经定性，软件外包的主要工作就是做一些产品中不涉及核心的部分，这让大部分以精英自居的大学生们感到有些可惜，有点怀才不遇的味道，我起初也是这样想的，不过现在的想法稍微有了些改变──在基础不太牢固的时候过分涉及核心业务会让自己深陷细节，比如在研究凸包算法的时候，大脑中本应充满数学逻辑，然而却因为语法问题不能继续下去，最终可能会走向选择语言的一条奇怪的道路上去。也就是说，我现在希望把软件外包作为强化内功的一个过程，同时能够接触到不少国外先进的管理方法，这些应该是以后走向管理岗位必不可少的经验，我不太希望一直走技术的道路。<br />
    感悟<br />
        现在也快到了学期末，两年的学习就要走过。这两年我都想用“紧张”这个词来总结，大一的时候我就是因为爱好这个专业才来的，相比其他不太爱好这个，或者被调剂过来的同学，我有了很大的优势，加上以前有些基础，一开始学起来并不太疲劳，如果说是疲劳，基本上是自己让自己疲劳了──不断学习业界的新技术，把握业界的发展方向等，同时对哲学、摄影很有兴趣，看了不少这方面的书。对于国内的教材，我一概不看，主要原因是担心错误，当然也错过了为数不多的几本经典，但我相信这些损失远不如看错误内容带来的损害大。在大二，我的方向有些许的转变，技术上转到了互联网和移动应用这方面，和他们的发展分不开，更重要的是我的想法能够很快在这上面变成现实，相比研究一个图论上的算法，我更喜欢去追逐用户的需求，在合适的平台上搭建应用来满足他们，这让我感到我在不断追逐什么。正因如此，我个人对编程语言都有了一种倾向，偏好选择自由、简洁的那种──PHP、Python、JavaScript、Perl、LISP等（后两者还不会），而且我异常讨厌Java和.NET，我感觉他们这两种语言已经被设计得过于复杂，构建企业应用当然需要很多安全方面的考虑，但对于个人的灵感来说，他们太过于庞大了。本来我的一个想法用PHP可能几分钟就能上线，而用JSP，很可能我会卡在那只叫Tom的猫身上（Tomcat），我并没有贬低后者，当然前者PHP需要的Apache或者Nginx配置起来也不是说一帆风顺。还有一点就是自由的东西一般都是免费的，可能也因此GNU依然活跃。<br />
    希望    <br />
        记得前段时间读过的《REWORK》这本书（中文版译作《重来》）中提到“计划都是垃圾”的概念，就是说你永远都不可能预期明天会是什么样子。在我看来，“希望”也是如此，这或多或少就是在讲我自己的未来将会是什么样子的，这不也是在自己给自己指定计划吗？！本来不打算写一些空洞的东西，因为这是真实的感悟嘛，不过可以当作自己的愿景，能够帮助改善这个项目的话，还是值得说点。希望以后自己的连续时间段多一些，这样有助于产品的开发，学过操作系统的都了解，一次函数调用就要中断，越是中断越不能让指令流水，总体速度根本不可能上去，我想开发也是如此；希望学校中能够用贴近现实的方法传授知识，至少应该从实用性上再次考量一下。</p></p>
]]></content>
  </entry>
  
</feed>

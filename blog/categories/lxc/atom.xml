<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: lxc | Trade Off]]></title>
  <link href="http://www.youth2009.org/blog/categories/lxc/atom.xml" rel="self"/>
  <link href="http://www.youth2009.org/"/>
  <updated>2014-12-20T23:49:29+08:00</updated>
  <id>http://www.youth2009.org/</id>
  <author>
    <name><![CDATA[dawncold]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[NAT实践]]></title>
    <link href="http://www.youth2009.org/blog/2012/10/09/nat-practical/"/>
    <updated>2012-10-09T14:09:00+08:00</updated>
    <id>http://www.youth2009.org/blog/2012/10/09/nat-practical</id>
    <content type="html"><![CDATA[<p>昨天用LXC建立了不少container，分别用来做webserver、databaseserver等等，让这些container运行着各自程序启动后如果有外部访问，就会通过iptables把请求发送到各自的地方，这里需要宿主机器做NAT。比如访问80端口，我会把请求转发到内部10.0.3.20这台container来处理，相应的response也会返回过去。这样就做到了服务隔离。</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo iptables -t nat -A PREROUTING -i eth1 -p tcp <span class="p">&amp;</span>mdash<span class="p">;</span>dport <span class="m">80</span> -j DNAT <span class="p">&amp;</span>mdash<span class="p">;</span>to 10.0.3.20&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;sudo iptables -t nat -A POSTROUTING -o eth1 -s 10.0.3.20 -j SNAT <span class="p">&amp;</span>mdash<span class="p">;</span>to 200.200.200.25&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;
</span></code></pre></td></tr></table></div></figure></p>

<p>这样就把进入的请求都发到了10.0.3.20这台container上去处理。</p>

<p><img src="http://pic.yupoo.com/dawncold0/CkkIbzDr/medish.jpg" alt="nat" /></p>

<p>只默认开了一个nginx，就这样的效果。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[LXC实践]]></title>
    <link href="http://www.youth2009.org/blog/2012/10/08/lxc-practical/"/>
    <updated>2012-10-08T20:46:00+08:00</updated>
    <id>http://www.youth2009.org/blog/2012/10/08/lxc-practical</id>
    <content type="html"><![CDATA[<p>这里的LXC是基于Ubuntu12.04的，在其他系统下可能不太一样。</p>

<p>0.安装lxc</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo apt-get install lxc&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;
</span></code></pre></td></tr></table></div></figure></p>

<p>1.修改lxc的mirror，不修改的话下载一个ubuntu景象会非常慢！！！</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo emacs /etc/default/lxc&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;第三行的mirror注释去掉，并修改为cn.archive.ubuntu.com，这样就非常快了&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;
</span></code></pre></td></tr></table></div></figure></p>

<p>2.创建lxc容器，t表示模板中的名字，n表示这个容器的名字（可自定义）</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo lxc-create -t ubuntu -n ubuntu_container&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;
</span></code></pre></td></tr></table></div></figure></p>

<p>3.启动容器</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo lxc-start -n ubuntu_container&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;
</span></code></pre></td></tr></table></div></figure></p>

<p>启动后就会出现登录ubuntu的界面，刚刚创建好容器后会给出一个提示，帐号密码都是ubuntu，登录进去就可以使用了。</p>

<p>猜想lxc的用法可能是对于部署的某个进程使用lxc隔离，这并不能做vps用，lxc只是轻量虚拟化，针对进程来的，所以还是单机在使用，如果做vps就得用vmware、xen、openvz这样的东西了。</p>
]]></content>
  </entry>
  
</feed>

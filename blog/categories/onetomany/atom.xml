<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: onetomany | Trade Off]]></title>
  <link href="http://www.youth2009.org/blog/categories/onetomany/atom.xml" rel="self"/>
  <link href="http://www.youth2009.org/"/>
  <updated>2013-12-01T03:36:01+08:00</updated>
  <id>http://www.youth2009.org/</id>
  <author>
    <name><![CDATA[dawncold]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[SQLalchemy中的oneToMany]]></title>
    <link href="http://www.youth2009.org/blog/2012/07/05/onetomany-in-sqlalchemy/"/>
    <updated>2012-07-05T22:54:00+08:00</updated>
    <id>http://www.youth2009.org/blog/2012/07/05/onetomany-in-sqlalchemy</id>
    <content type="html"><![CDATA[<p>今天在这里遇到些问题，花了一段时间，后来看官方文档解决了，很管用！</p>

<p>各个orm中的关系设置大同小异，一对多的关系中需要在“多”方的列中加入一个外键，指向“一”方，然后在“一”方加入一个存储“多”方的变量（这个orm中需要使用relationship方法声明）。</p>

<p>至此一个单项的OneToMany就弄好了，如果需要加入“反向”，形成双向的关系，那就在刚才的“一”方中存储“多”方的变量中指明backref参数，值就是在“多”方的属性中存储“一”方的这个属性名。我在这里弄错了，受了EJB的影响，以为双方都需要设置，结果弄的重复了，还好看了官方文档。</p>

<p>其他关系请参考<a href="http://docs.sqlalchemy.org/en/rel_0_7/orm/relationships.html#sqlalchemy.orm.relationship">官方文档</a></p>
]]></content>
  </entry>
  
</feed>

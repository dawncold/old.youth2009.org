<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: java | Trade Off]]></title>
  <link href="http://www.youth2009.org/www/blog/categories/java/atom.xml" rel="self"/>
  <link href="http://www.youth2009.org/www/"/>
  <updated>2014-08-14T22:11:20+08:00</updated>
  <id>http://www.youth2009.org/www/</id>
  <author>
    <name><![CDATA[dawncold]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[svn的javahl库]]></title>
    <link href="http://www.youth2009.org/www/blog/2012/06/11/lib-javahl-for-svn-on-mac/"/>
    <updated>2012-06-11T10:17:00+08:00</updated>
    <id>http://www.youth2009.org/www/blog/2012/06/11/lib-javahl-for-svn-on-mac</id>
    <content type="html"><![CDATA[<p>今天基本完成了LoveSMS，想checkout一下jdrcom来看看，所以就安装上了svn for eclipse，然后在导入的时候提示缺少javahl库，去了官方查看了一下，说是对于Mac用户，只需要下载他们的bin文件就能解决，我一看才给到1.6.5的版本，而我自己用brew都装到了1.7.5，而且svn插件用的是1.8.x，需要1.7+的svn支持才行，所以就自己重新安装了svn：</p>

<p><code>bash
brew install subversion --universal --java
</code></p>

<p>这句是关键哦，当然你得先uninstall已经安装的svn才行。加了java开关就可以告诉svn需要java IDE的库，编译的完成后会继续编译javahl～</p>

<p>会有这样的提示哦：</p>

<p><code>bash
To use Java bindings with various Java IDEs, you might need a universal build:
 brew install subversion --universal --java
==&gt; ./configure --disable-debug --prefix=/usr/local/Cellar/subversion/1.7.5 --with-ssl --with-zlib=/usr --with-sqlite=/usr/local --disable-neon-version-chec
==&gt; make
==&gt; make install
==&gt; make javahl
==&gt; make install-javahl
==&gt; Caveats
You may need to link the Java bindings into the Java Extensions folder:
 sudo mkdir -p /Library/Java/Extensions
 sudo ln -s /usr/local/lib/libsvnjavahl-1.dylib /Library/Java/Extensions/libsvnjavahl-1.dylib
</code></p>

<p>自己加入后面的链接就ok了！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[swing中的Timer还是用在GUI中的好]]></title>
    <link href="http://www.youth2009.org/www/blog/2012/06/02/method-timer-in-swing-is-better-in-gui/"/>
    <updated>2012-06-02T09:23:00+08:00</updated>
    <id>http://www.youth2009.org/www/blog/2012/06/02/method-timer-in-swing-is-better-in-gui</id>
    <content type="html"><![CDATA[<p>刚刚翻了翻《Java核心技术》这本书，里面提到了swing中的Timer的用法，我就实践一下，结果发现根本没有反映，于是网上搜索答案，在stackoverflow中找到。</p>

<p>我写的测试是每秒输出现在的时间而已。</p>

<p>&#8220;`java
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Date;</p>

<p>public class TimePrint implements ActionListener
{</p>

<p>   @Override
   public void actionPerformed(ActionEvent e)
   {</p>

<pre><code>   // TODO Auto-generated method stub
   System.out.println("date is: " + (new Date()));
   Toolkit.getDefaultToolkit().beep();
</code></pre>

<p>   }
}</p>

<p>&#8220;`</p>

<p>在调用的时候如果忘记写Thread.sleep(xxx)这行就不会看到效果，具体原因不太清楚，可能这个swing中的Timer只是用来在GUI中做些什么工作的，而我用终端输出内容就不太合适了，于是就牵扯出来很多线程的问题。</p>

<p>这是main方法中的内容：</p>

<p>&#8220;`bash
import java.awt.event.ActionListener;</p>

<p>import javax.swing.Timer;</p>

<p>public class TimerPrintTest
{
   public static void main(String[] argStrings) throws InterruptedException
   {</p>

<pre><code>   System.out.println("Running...");
   ActionListener listener = new TimePrint();
   Timer timer = new Timer(1000, listener);
   timer.start();
   Thread.sleep(4000);
</code></pre>

<p>   }
}</p>

<p>&#8220;`</p>
]]></content>
  </entry>
  
</feed>
